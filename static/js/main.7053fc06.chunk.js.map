{"version":3,"sources":["data.js","components/Player.js","components/Song.js","components/LibrarySong.js","components/Library.js","components/Nav.js","App.js","reportWebVitals.js","index.js"],"names":["chillHop","name","cover","artist","audio","color","id","uuidv4","active","Player","currentSong","setCurrentSong","isPlaying","setIsPlaying","audioRef","setSongInfo","songInfo","songs","setSongs","getTime","time","Math","floor","slice","skipTrackHandler","direction","a","currentIndex","findIndex","song","length","activeLibraryHandler","current","play","trackAnim","transform","animationPercentage","nextPrev","newSongs","map","className","currentTime","style","background","min","max","duration","value","onChange","e","target","type","icon","faAngleLeft","size","onClick","pause","faPause","faPlay","faAngleRight","Song","src","alt","LibrarySong","songSelectHandler","Library","libraryStatus","Nav","setLibraryStatus","faMusic","App","useRef","useState","data","timeUpdateHandler","roundedCurrent","round","roundedDuration","animation","songEndHandler","onLoadedMetadata","onTimeUpdate","ref","onEnded","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7053fc06.chunk.js","sourcesContent":["import { v4 as uuidv4 } from \"uuid\";\r\nfunction chillHop() {\r\n  return [\r\n    {\r\n      name: \"Beaver Creek\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n      artist: \"Aso, Middle School, Aviino\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10075\",\r\n      color: [\"#205950\", \"#2ab3bf\"],\r\n      id: uuidv4(),\r\n      active: true,\r\n    },\r\n    {\r\n      name: \"Daylight\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\r\n      artist: \"Aiguille\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9272\",\r\n      color: [\"#EF8EA9\", \"#ab417f\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Keep Going\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n      artist: \"Swørn\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9222\",\r\n      color: [\"#CD607D\", \"#c94043\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Nightfall\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\r\n      artist: \"Aiguille\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9148\",\r\n      color: [\"#EF8EA9\", \"#ab417f\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Reflection\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n      artist: \"Swørn\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9228\",\r\n      color: [\"#CD607D\", \"#c94043\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Under the City Stars\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n      artist: \"Aso, Middle School, Aviino\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10074\",\r\n      color: [\"#205950\", \"#2ab3bf\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    //ADD MORE HERE\r\n  ];\r\n}\r\n\r\nexport default chillHop;","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlay, faAngleLeft, faAngleRight, faPause } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nconst Player = ({ currentSong, setCurrentSong, isPlaying, setIsPlaying, audioRef, setSongInfo, songInfo, songs, setSongs}) => {\r\n    \r\n\r\n    const getTime = (time) => {\r\n        return (Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2));\r\n    };\r\n\r\n    const dragHandler = (e) => {\r\n        audioRef.current.currentTime = e.target.value;\r\n        setSongInfo({ ...songInfo, currentTime: e.target.value });\r\n    };\r\n\r\n    const skipTrackHandler = async (direction) => {\r\n        let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n        if (direction === \"skip-forward\") {\r\n            await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\r\n            activeLibraryHandler(songs[(currentIndex + 1) % songs.length]);\r\n        }\r\n        if (direction === \"skip-back\") {\r\n            if ((currentIndex - 1) % songs.length === -1) {\r\n                await setCurrentSong(songs[songs.length - 1]);\r\n                activeLibraryHandler(songs[songs.length - 1]);\r\n                if (isPlaying) audioRef.current.play();\r\n                return;\r\n            }\r\n            await setCurrentSong(songs[(currentIndex - 1) % songs.length])\r\n            activeLibraryHandler(songs[(currentIndex - 1) % songs.length]);\r\n        };\r\n        if (isPlaying) audioRef.current.play();\r\n    }\r\n\r\n    const playSongHandler = () => {\r\n        if (isPlaying) {\r\n            audioRef.current.pause();\r\n            setIsPlaying(!isPlaying);\r\n        } else {\r\n            audioRef.current.play();\r\n            setIsPlaying(!isPlaying);\r\n        }\r\n    };\r\n\r\n    const trackAnim = {\r\n        transform:`translateX(${songInfo.animationPercentage}%)`\r\n    }\r\n    \r\n    const activeLibraryHandler = (nextPrev) => {\r\n        const newSongs = songs.map((song) => {\r\n            if (song.id === nextPrev.id) {\r\n                return {\r\n                    ...song,\r\n                    active: true\r\n                };\r\n            } else {\r\n                return {\r\n                    ...song,\r\n                    active: false\r\n                };\r\n            };\r\n        });\r\n        setSongs(newSongs);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"player\">\r\n            <div className=\"time-control\">\r\n                <p>{getTime(songInfo.currentTime)}</p>\r\n                <div style={{background:`linear-gradient(to right, ${currentSong.color[0]}, ${currentSong.color[1]})`}} className=\"track\">\r\n                <input\r\n                    min={0}\r\n                    max={songInfo.duration || 0}\r\n                    value={songInfo.currentTime}\r\n                    onChange={dragHandler}\r\n                    type=\"range\"\r\n                    />\r\n                    <div className=\"animate-track\" style={trackAnim}></div>\r\n                    </div>\r\n                <p>{songInfo.duration? getTime(songInfo.duration):\"0:00\"}</p>\r\n            </div>\r\n            <div className=\"play-control\">\r\n                <FontAwesomeIcon\r\n                    className=\"skip-back\"\r\n                    icon={faAngleLeft}\r\n                    size=\"2x\"\r\n                    onClick={()=>skipTrackHandler('skip-back')}\r\n                />\r\n                <FontAwesomeIcon\r\n                    onClick={playSongHandler}\r\n                    className=\"play\"\r\n                    icon={isPlaying ? faPause : faPlay}\r\n                    size=\"2x\"\r\n                />\r\n                <FontAwesomeIcon\r\n                    className=\"skip-forward\"\r\n                    icon={faAngleRight}\r\n                    size=\"2x\"\r\n                    onClick={()=>skipTrackHandler('skip-forward')}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Player;","import React from 'react';\r\n\r\nconst Song = ({currentSong}) => {\r\n    return (\r\n        <div className=\"song-container\">\r\n            <img src={currentSong.cover} alt=\"album cover\" />\r\n            <h2>{currentSong.name}</h2>\r\n            <h3>{currentSong.artist}</h3>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Song;","import React from 'react';\r\n\r\n\r\nconst LibrarySong = ({ song, songs, setCurrentSong, audioRef, isPlaying, id, setSongs}) => {\r\n    \r\n    const songSelectHandler =async () => {\r\n        await setCurrentSong(song);\r\n\r\n        const newSongs = songs.map((song) => {\r\n            if (song.id === id) {\r\n                return {\r\n                    ...song,\r\n                    active: true\r\n                };\r\n            } else {\r\n                return {\r\n                    ...song,\r\n                    active: false\r\n                };\r\n            };\r\n        });\r\n        setSongs(newSongs);\r\n        if (isPlaying) audioRef.current.play();\r\n    };\r\n\r\n    return (\r\n        <div onClick={songSelectHandler} className={`library-song ${song.active ? \"selected\":\"\"}`}>\r\n            <img src={song.cover} alt=\"album cover\" />\r\n            <div className=\"song-description\">\r\n                <h3>{song.name}</h3>\r\n                <h4>{song.artist}</h4>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LibrarySong;","import React from 'react';\r\nimport LibrarySong from './LibrarySong';\r\n\r\nconst Library = ({songs, setCurrentSong, audioRef, isPlaying, setSongs, libraryStatus}) => {\r\n    return (\r\n        <div className={`library ${libraryStatus ? 'active-library': ''} `}>\r\n            <h2>Library</h2>\r\n            <div className=\"library-songs\">\r\n                {songs.map((song) =>\r\n                    <LibrarySong\r\n                        key={song.id}\r\n                        id={song.id}\r\n                        song={song}\r\n                        songs={songs}\r\n                        setCurrentSong={setCurrentSong}\r\n                        isPlaying={isPlaying}\r\n                        audioRef={audioRef}\r\n                        setSongs={setSongs}\r\n                    />\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Library;","import React from 'react';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMusic } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nav = ({libraryStatus, setLibraryStatus}) => {\r\n    return (\r\n        <nav>\r\n            <h1>Music Player</h1>\r\n            <button onClick={()=>setLibraryStatus(!libraryStatus)}>\r\n                Library\r\n                 <FontAwesomeIcon icon={faMusic}/>\r\n            </button>\r\n        </nav>\r\n    )\r\n}\r\nexport default Nav;","import React, {useState, useRef} from \"react\";\nimport './styles/app.scss';\n\nimport data from './data';\n\nimport Player from './components/Player';\nimport Song from './components/Song';\nimport Library from './components/Library';\nimport Nav from './components/Nav';\n\nconst App = () => {\n\n  const audioRef = useRef(null);\n\n  const [songs, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n    animationPercentage: 0\n  });\n  const [libraryStatus, setLibraryStatus] = useState(false);\n  \n  const timeUpdateHandler = (e) => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    const roundedCurrent = Math.round(current);\n    const roundedDuration = Math.round(duration);\n    const animation = Math.round((roundedCurrent / roundedDuration)*100);\n    setSongInfo({ ...songInfo, currentTime: current, duration, animationPercentage:animation });\n  };\n  \n  const songEndHandler = async() => {\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n    await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n    if (isPlaying) audioRef.current.play();\n  }\n\n  return (\n    <div className={`App ${libraryStatus ? \"library-active\" : \"\"}`}>\n      <Nav\n        libraryStatus={libraryStatus}\n        setLibraryStatus={setLibraryStatus}\n      />\n      <Song currentSong={currentSong}/>\n      <Player\n        currentSong={currentSong}\n        setCurrentSong={setCurrentSong}\n        isPlaying={isPlaying}\n        setIsPlaying={setIsPlaying}\n        audioRef={audioRef}\n        songs={songs}\n        setSongs={setSongs}\n        songInfo={songInfo}\n        setSongInfo={setSongInfo}\n      />\n      <Library\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        audioRef={audioRef}\n        isPlaying={isPlaying}\n        setSongs={setSongs}\n        libraryStatus={libraryStatus}\n      />\n      <audio onLoadedMetadata={timeUpdateHandler}\n        onTimeUpdate={timeUpdateHandler}\n        ref={audioRef}\n        src={currentSong.audio}\n        onEnded={songEndHandler}\n      ></audio>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}